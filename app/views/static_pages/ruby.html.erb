<h1>Pagina 2: Ruby</h1>
<br><p>◙Interpolación de strings</p>
<p>-Tener definida una expresion dentro de un string para que ruby interprete el string final</p>
<br><p>◙Cómo se declara un array y cómo se adiciona un elemento al final del array</p>
<p>Rta. Forma 1 : array = Array(nil) </p>
<p>-array = [] </p>
<p>-array = Array(1,2.....10) </p>
<p>-array = Array.new </p>
<p> Se adiciona un elemento al final del array con : array.unshift(elemento) </p>
<br><p>◙Cómo se itera un array utilizando el comando each</p>
<p>-Array.each do -elemento a iterar- accion- end </p>
<br><p>◙Cómo se declara un hash</p>
<p>-hash = { "llave" => "valor }</p>
<p>-hash = Hash.new</p>
<br><p>◙Cómo se itera un hash utilizando el comando each</p>
<p>hash.each do -llave,valor- accion- end </p>
<br><p>◙Que es un block en ruby? De un ejemplo de cómo utilizarlo</p>
<p>Es la representacion de una funcion de este lenguaje y su convención comienza con do y temrina en end</p>
<p>bloqueEjemplo {do accion 1 end}</p>
<br><p>◙Cual es la convención en Ruby a la hora de nombrar variables?</p>
<p>variable = "nueva variable"</p>
<br><p>◙Qué son attr_reader, attr_writer y attr_accesor? Para qué sirven?</p>
<p>Son funciones que nos permiten compartir atributos de diferentes maneras:</p>
<p>-lectura (arrt_reader) </p><br>
<p>-escritura (attr_writer) </p><br>
<p>lectura-escritura (attr_accesor) </p><br>

